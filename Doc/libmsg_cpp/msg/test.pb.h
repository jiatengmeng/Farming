// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_test_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_test_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_test_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_test_2eproto;
namespace test {
class DataPackage;
class DataPackageDefaultTypeInternal;
extern DataPackageDefaultTypeInternal _DataPackage_default_instance_;
}  // namespace test
PROTOBUF_NAMESPACE_OPEN
template<> ::test::DataPackage* Arena::CreateMaybeMessage<::test::DataPackage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace test {

// ===================================================================

class DataPackage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.DataPackage) */ {
 public:
  inline DataPackage() : DataPackage(nullptr) {}
  virtual ~DataPackage();

  DataPackage(const DataPackage& from);
  DataPackage(DataPackage&& from) noexcept
    : DataPackage() {
    *this = ::std::move(from);
  }

  inline DataPackage& operator=(const DataPackage& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataPackage& operator=(DataPackage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataPackage& default_instance();

  static inline const DataPackage* internal_default_instance() {
    return reinterpret_cast<const DataPackage*>(
               &_DataPackage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DataPackage& a, DataPackage& b) {
    a.Swap(&b);
  }
  inline void Swap(DataPackage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataPackage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataPackage* New() const final {
    return CreateMaybeMessage<DataPackage>(nullptr);
  }

  DataPackage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataPackage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataPackage& from);
  void MergeFrom(const DataPackage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataPackage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.DataPackage";
  }
  protected:
  explicit DataPackage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_test_2eproto);
    return ::descriptor_table_test_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRealArrayFieldNumber = 1,
    kIntArrayFieldNumber = 3,
    kRealCountFieldNumber = 2,
    kIntCountFieldNumber = 4,
  };
  // repeated double real_array = 1;
  int real_array_size() const;
  private:
  int _internal_real_array_size() const;
  public:
  void clear_real_array();
  private:
  double _internal_real_array(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_real_array() const;
  void _internal_add_real_array(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_real_array();
  public:
  double real_array(int index) const;
  void set_real_array(int index, double value);
  void add_real_array(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      real_array() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_real_array();

  // repeated int32 int_array = 3;
  int int_array_size() const;
  private:
  int _internal_int_array_size() const;
  public:
  void clear_int_array();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_array(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_int_array() const;
  void _internal_add_int_array(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_int_array();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 int_array(int index) const;
  void set_int_array(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_int_array(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      int_array() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_int_array();

  // required int32 real_count = 2;
  bool has_real_count() const;
  private:
  bool _internal_has_real_count() const;
  public:
  void clear_real_count();
  ::PROTOBUF_NAMESPACE_ID::int32 real_count() const;
  void set_real_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_real_count() const;
  void _internal_set_real_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 int_count = 4;
  bool has_int_count() const;
  private:
  bool _internal_has_int_count() const;
  public:
  void clear_int_count();
  ::PROTOBUF_NAMESPACE_ID::int32 int_count() const;
  void set_int_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_count() const;
  void _internal_set_int_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:test.DataPackage)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > real_array_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > int_array_;
  ::PROTOBUF_NAMESPACE_ID::int32 real_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_count_;
  friend struct ::TableStruct_test_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataPackage

// repeated double real_array = 1;
inline int DataPackage::_internal_real_array_size() const {
  return real_array_.size();
}
inline int DataPackage::real_array_size() const {
  return _internal_real_array_size();
}
inline void DataPackage::clear_real_array() {
  real_array_.Clear();
}
inline double DataPackage::_internal_real_array(int index) const {
  return real_array_.Get(index);
}
inline double DataPackage::real_array(int index) const {
  // @@protoc_insertion_point(field_get:test.DataPackage.real_array)
  return _internal_real_array(index);
}
inline void DataPackage::set_real_array(int index, double value) {
  real_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:test.DataPackage.real_array)
}
inline void DataPackage::_internal_add_real_array(double value) {
  real_array_.Add(value);
}
inline void DataPackage::add_real_array(double value) {
  _internal_add_real_array(value);
  // @@protoc_insertion_point(field_add:test.DataPackage.real_array)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataPackage::_internal_real_array() const {
  return real_array_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataPackage::real_array() const {
  // @@protoc_insertion_point(field_list:test.DataPackage.real_array)
  return _internal_real_array();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataPackage::_internal_mutable_real_array() {
  return &real_array_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataPackage::mutable_real_array() {
  // @@protoc_insertion_point(field_mutable_list:test.DataPackage.real_array)
  return _internal_mutable_real_array();
}

// required int32 real_count = 2;
inline bool DataPackage::_internal_has_real_count() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DataPackage::has_real_count() const {
  return _internal_has_real_count();
}
inline void DataPackage::clear_real_count() {
  real_count_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataPackage::_internal_real_count() const {
  return real_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataPackage::real_count() const {
  // @@protoc_insertion_point(field_get:test.DataPackage.real_count)
  return _internal_real_count();
}
inline void DataPackage::_internal_set_real_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  real_count_ = value;
}
inline void DataPackage::set_real_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_real_count(value);
  // @@protoc_insertion_point(field_set:test.DataPackage.real_count)
}

// repeated int32 int_array = 3;
inline int DataPackage::_internal_int_array_size() const {
  return int_array_.size();
}
inline int DataPackage::int_array_size() const {
  return _internal_int_array_size();
}
inline void DataPackage::clear_int_array() {
  int_array_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataPackage::_internal_int_array(int index) const {
  return int_array_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataPackage::int_array(int index) const {
  // @@protoc_insertion_point(field_get:test.DataPackage.int_array)
  return _internal_int_array(index);
}
inline void DataPackage::set_int_array(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:test.DataPackage.int_array)
}
inline void DataPackage::_internal_add_int_array(::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_array_.Add(value);
}
inline void DataPackage::add_int_array(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_int_array(value);
  // @@protoc_insertion_point(field_add:test.DataPackage.int_array)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
DataPackage::_internal_int_array() const {
  return int_array_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
DataPackage::int_array() const {
  // @@protoc_insertion_point(field_list:test.DataPackage.int_array)
  return _internal_int_array();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
DataPackage::_internal_mutable_int_array() {
  return &int_array_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
DataPackage::mutable_int_array() {
  // @@protoc_insertion_point(field_mutable_list:test.DataPackage.int_array)
  return _internal_mutable_int_array();
}

// required int32 int_count = 4;
inline bool DataPackage::_internal_has_int_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DataPackage::has_int_count() const {
  return _internal_has_int_count();
}
inline void DataPackage::clear_int_count() {
  int_count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataPackage::_internal_int_count() const {
  return int_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataPackage::int_count() const {
  // @@protoc_insertion_point(field_get:test.DataPackage.int_count)
  return _internal_int_count();
}
inline void DataPackage::_internal_set_int_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  int_count_ = value;
}
inline void DataPackage::set_int_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_count(value);
  // @@protoc_insertion_point(field_set:test.DataPackage.int_count)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_test_2eproto
